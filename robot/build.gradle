apply plugin: "jaci.openrio.gradle.GradleRIO"

import jaci.openrio.gradle.GradleRIOPlugin
import jaci.openrio.gradle.frc.FRCJavaArtifact
import jaci.openrio.gradle.frc.RoboRIO
import jaci.openrio.gradle.wpi.WPIExtension

def TEAM = 1089
def ROBOT_CLASS = "org.usfirst.frc.team1089.robot.Robot"
def wpiext = project.extensions.getByType(WPIExtension)

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

wpiext.wpilibVersion = '2018.3.3'
wpiext.ctreVersion = '5.2.2.0'

configurations {
    trajectory {
        description = "Trajectory files"
    }

    outlineViewer {
        description = "Outline viewer binaries"
    }
}

// Defining my dependencies. In this case, WPILib (+ friends), CTRE Phoenix
// and NavX.
dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
    compile pathfinder()
    outlineViewer 'edu.wpi.first.wpilib:OutlineViewer:2.0.6'
    nativeLib fileTree(dir: 'lib', include: '*.so')
    trajectory fileTree(dir: 'trajectories', include: '**/*_detailed.csv')
}

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target('roborio', RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('robotArtifact', FRCJavaArtifact) {
            targets << "roborio"
            after('configCollectionArtifact')
            after('trajectoryCollectionArtifact')
        }

        fileCollectionArtifact('configCollectionArtifact') {
            targets << 'roborio'
            files = project.configurations.config
        }

        fileCollectionArtifact('trajectoryCollectionArtifact') {
            targets << 'roborio'
            directory = 'trajectories'
            files = project.configurations.trajectory

            predeploy << {
                execute 'rm -rf /home/lvuser/trajectories'
            }
        }
    }
}

// Overwrite this task b/c the default GradleRIO
// task doesn't function as it should.
task shuffleboard(overwrite: true) {
    group = null
    description = "A task that doesn't work like it should. Please see :shuffleboard " +
            "for functioning tasks."

    doLast {
        System.out.println("Please see :shuffleboard for functioning tasks.")
    }
}

task runProfileGenerator(type: Exec) {
    group = 'other'
    description = "Executes the motion profile generator app"

    workingDir = "${projectDir}\\trajectories\\"
    commandLine 'java', '-jar', "${projectDir}\\trajectories\\motion-profile-generator.jar"
}

task runOutlineViewer(type: Exec) {
    group = 'gradlerio'
    description = "Runs the outline viewer to see network table values"

    // Use outlineViewer configuration
    def config = project.configurations.outlineViewer
    def byteOut = new ByteArrayOutputStream()

    // Get shuffleboard dependency from wpiTools config
    Set<File> jarfiles = config.files(config.dependencies.find { d -> d.name == "OutlineViewer" })

    // Exec task fields
    workingDir = "${projectDir}"
    commandLine 'java', '-jar', "${jarfiles.first().absolutePath}"
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}
