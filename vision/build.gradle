import jaci.gradle.toolchains.*
import jaci.gradle.nativedeps.*

apply plugin: 'jaci.gradle.EmbeddedTools'

// Change the line below if you change the name of your main Java class.
// Reminder: full declaration of name, i.e.: include packages
def mainClass = 'org.usfirst.frc.team1089.main.Main'

// Name of the files to create on the pi
def jarName = "vision"
def runScriptName = "runVision"
def killScriptName = "killVision"
def logName = "visionLog"

configurations {
    nativeLib
}

dependencies {
    nativeLib fileTree(dir: 'lib/natives', include: '*.so')
}

deploy {
    targets {
        target('rpi') {
            addresses << '10.10.89.20:5802' << '10.10.89.20'
            user = 'pi'
            password = 'raspberry'
            directory = 'output'
            failOnMissing = false
            timeout = 10
        }
    }

    artifacts {
        // NOTE: Directory is relative to target directory
        javaArtifact('visionArtifact') {
            targets << 'rpi'
            filename = "${jarName}.jar"
            jar = 'jar'

            predeploy << {
                execute './${killScriptName}'
                execute 'rm -rf /home/pi/output'
            }

            postdeploy << {
                def cmd = "java -Djava.library.path=. -jar ${jarName}.jar"

                execute "echo \"${cmd}\" >> ${runScriptName}"
                execute "echo \"pkill -f ${cmd}\" >> ${killScriptName}"
                execute "chmod 755 ${runScriptName}"
                execute "nohup ./${runScriptName} > /tmp/${logName} 2>&1 &"
            }
        }

        // Using a fileCollectionArtifact for deploying so's.
        // Bad practice, I think.
        fileCollectionArtifact('nativeCollectionArtifact') {
            targets << 'rpi'
            files = configurations.nativeLib
        }
    }
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    // Set up manifest to point the main class to the right class.
    manifest {
        attributes 'Main-Class': mainClass
    }
}